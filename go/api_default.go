/*
 * Travel Management service
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"encoding/json"
	"fmt"
	"io"
	"net/http"
	"os"
)

var bookings = make([]Booking, 0, 10)

type Employee struct {
	Id      int32  `json:"id,omitempty"`
	Name    string `json:"name,omitempty"`
	Address string `json:"address,omitempty"`
}

func CreateBooking(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")

	clientId := os.Getenv("CLIENT_ID")
	clientSecret := os.Getenv("CLIENT_SECRET")
	tokenUrl := os.Getenv("TOKEN_URL")

	fmt.Println(clientId)
	fmt.Println(clientSecret)
	fmt.Println(tokenUrl)
	accessToken := GetToken()

	fmt.Println(accessToken)

	request := BookingRequest{}

	req, _ := io.ReadAll(r.Body)

	json.Unmarshal(req, &request)

	requestUrl := fmt.Sprintf("%s/employees/%d", os.Getenv("SERVICE_URL"), request.EmpId)

	getEmp, _ := http.NewRequest("GET", requestUrl, nil)
	getEmp.Header.Add("Authorization", "Bearer "+accessToken)

	empResp, _ := http.DefaultClient.Do(getEmp)

	emp := Employee{}

	body, _ := io.ReadAll(empResp.Body)

	fmt.Println(string(body))

	json.Unmarshal(body, &emp)

	booking := Booking{
		Id:          fmt.Sprint(len(bookings) + 1),
		EmpName:     emp.Name,
		From:        request.From,
		Destination: request.Destination,
	}

	respJson, _ := json.Marshal(booking)

	w.WriteHeader(http.StatusOK)
	w.Write(respJson)
}

func GetBookigById(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusOK)
}

func GetBookings(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusOK)
}
